{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StyledCol","styled","Col","StyledRow","Row","calcRentReturn","homePrice","monthlyRent","taxRate","monthlyHOA","parseFloat","calcLoanReturn","loanAmount","loanRate","AnalyticalTool","React","useState","setHomePrice","homePriceAppRate","setHomePriceAppRate","setMonthlyRent","setMonthlyHOA","setTaxRate","setLoanAmount","setLoanRate","Container","sm","type","value","onChange","event","target","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.a44c8cf3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"./index.css\";\r\n//import App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCol = styled(Col)`\r\n  padding-left: 0.5 rem;\r\n  padding-right: 0.5 rem;\r\n  border-style: solid;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  padding-top: 0.5 rem;\r\n  margin-left: -0.5 rem;\r\n  margin-right: ;\r\n  &:last-child {\r\n    padding-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst calcRentReturn = (homePrice, monthlyRent, taxRate, monthlyHOA) => {\r\n  const totalRate =\r\n    ((parseFloat(monthlyRent) - parseFloat(monthlyHOA)) * 12) /\r\n      parseFloat(homePrice) -\r\n    parseFloat(taxRate);\r\n  return totalRate;\r\n};\r\n\r\nconst calcLoanReturn = (homePrice, loanAmount, loanRate) => {\r\n  const totalRate =\r\n    (parseFloat(loanAmount) * parseFloat(loanRate)) / parseFloat(homePrice);\r\n  return totalRate;\r\n};\r\n\r\nconst AnalyticalTool = () => {\r\n  const [homePrice, setHomePrice] = React.useState(940000);\r\n  const [homePriceAppRate, setHomePriceAppRate] = React.useState(0.02);\r\n  const [monthlyRent, setMonthlyRent] = React.useState(3800);\r\n  const [monthlyHOA, setMonthlyHOA] = React.useState(1000);\r\n  const [taxRate, setTaxRate] = React.useState(0.0155);\r\n\r\n  const [loanAmount, setLoanAmount] = React.useState(740000);\r\n  const [loanRate, setLoanRate] = React.useState(0.027);\r\n\r\n  return (\r\n    <Container>\r\n      <StyledRow>\r\n        <StyledCol>\r\n          <h1>Rent or Loan</h1>\r\n          <p>\r\n            You need some place to live. You can rent. You can buy usually with\r\n            a loan.\r\n          </p>\r\n          <p>Which one is financially more appealing?</p>\r\n        </StyledCol>\r\n      </StyledRow>\r\n      <StyledRow>\r\n        <StyledCol sm={4}>\r\n          <form>\r\n            <label>\r\n              Home Price:\r\n              <input\r\n                type=\"Number\"\r\n                value={homePrice}\r\n                onChange={(event) => {\r\n                  setHomePrice(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Monthly Rent:\r\n              <input\r\n                type=\"Number\"\r\n                value={monthlyRent}\r\n                onChange={(event) => {\r\n                  setMonthlyRent(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Monthly HOA:\r\n              <input\r\n                type=\"Number\"\r\n                value={monthlyHOA}\r\n                onChange={(event) => {\r\n                  setMonthlyHOA(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Property Tax:\r\n              <input\r\n                type=\"Number\"\r\n                value={taxRate}\r\n                onChange={(event) => {\r\n                  setTaxRate(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </StyledCol>\r\n        <StyledCol sm={8}>\r\n          <h5>\r\n            Assuming you own the house, what is the rate of return if you rent?\r\n          </h5>\r\n          <p>Loan Annual Net Return:</p>\r\n          <p>{calcRentReturn(homePrice, monthlyRent, taxRate, monthlyHOA)}</p>\r\n        </StyledCol>\r\n      </StyledRow>\r\n      <StyledRow>\r\n        <StyledCol sm={4}>\r\n          <form>\r\n            <label>\r\n              Loan Amount:\r\n              <input\r\n                type=\"Number\"\r\n                value={loanAmount}\r\n                onChange={(event) => {\r\n                  setLoanAmount(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Loan Rate:\r\n              <input\r\n                type=\"Number\"\r\n                value={loanRate}\r\n                onChange={(event) => {\r\n                  setLoanRate(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </StyledCol>\r\n        <StyledCol sm={8}>\r\n          <h5>\r\n            Assuming you purchase a house by entering a loan, what is loan rate\r\n            of return you paid in terms of home price?\r\n          </h5>\r\n          <p>Rent Annual Return:</p>\r\n          <p>{calcLoanReturn(homePrice, loanAmount, loanRate)}</p>\r\n        </StyledCol>\r\n      </StyledRow>\r\n      <StyledRow>\r\n        <StyledCol sm={4}>\r\n          <form>\r\n            <label>\r\n              Home Price Appreciation:\r\n              <input\r\n                type=\"Number\"\r\n                value={homePriceAppRate}\r\n                onChange={(event) => {\r\n                  setHomePriceAppRate(event.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </StyledCol>\r\n        <StyledCol sm={8}>\r\n          <h5>\r\n            Financially, how much you earn if you buy a house with a loan and\r\n            rent it out considering home price appreciation based on the\r\n            downpayment you paid?\r\n          </h5>\r\n          <p>Net Annual Return:</p>\r\n          <p>\r\n            {((calcRentReturn(homePrice, monthlyRent, taxRate, monthlyHOA) -\r\n              calcLoanReturn(homePrice, loanAmount, loanRate) +\r\n              parseFloat(homePriceAppRate)) *\r\n              parseFloat(homePrice)) /\r\n              (parseFloat(homePrice) - parseFloat(loanAmount))}\r\n          </p>\r\n        </StyledCol>\r\n      </StyledRow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <AnalyticalTool />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}